#lang racket

;; 使用 (square x) 只需要计算一次 x，这正是算法能够剩下时间的部分：
;; 展开的二叉树只需要计算一个分支即可，使得总的时间复杂度将为O(logN)
;; 而使用 (* x x) 则导致展开的每个分支都需要逐个计算。
